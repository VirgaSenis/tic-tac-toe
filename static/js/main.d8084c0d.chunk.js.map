{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","clickPos","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","pos","col","row","Math","floor","getPositionString","desc","cls","key","class","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8084c0d.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }\n  \n  class Board extends React.Component {\n    renderSquare(i) {\n      return (\n        <Square\n          value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}\n        />\n      );\n    }\n  \n    render() {\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [\n          {\n            squares: Array(9).fill(null),\n            clickPos: null\n          }\n        ],\n        stepNumber: 0,\n        xIsNext: true\n      };\n    }\n  \n    handleClick(i) {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n      this.setState({\n        history: history.concat([\n          {\n            squares: squares,\n            clickPos: i\n          }\n        ]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  \n    jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0\n      });\n    }\n  \n    render() {\n      const history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n  \n      const moves = history.map((step, move) => {\n        const pos = getPositionString(this.state.history[move].clickPos);\n        const desc = move ?\n          'Go to move #' + move + ' @' + pos :\n          'Go to game start';\n        const cls = this.state.stepNumber == move ? 'bold' : '';\n        return (\n          <li key={move} >\n            <button class={cls} onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n      });\n  \n      let status;\n      if (winner) {\n        status = \"Winner: \" + winner;\n      } else {\n        status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n      }\n  \n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              squares={current.squares}\n              onClick={i => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(<Game />, document.getElementById(\"root\"));\n  \n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n  function getPositionString(i) {\n      const col = (i % 3) + 1;\n      const row = Math.floor(i / 3) + 1;\n\n      return '(' + col + ',' + row + ')';\n  }\n  "],"sourceRoot":""}